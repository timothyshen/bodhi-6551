/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ChapterLog,
  ChapterLogInterface,
} from "../../contracts/ChapterLog";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_bookShareAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chapterId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AuthorTipped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chapterId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "ChapterCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "originalChapterId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newChapterId",
        type: "uint256",
      },
    ],
    name: "ChapterRemixed",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_REMIXES",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chapterLog",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "remixes",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isRemix",
            type: "bool",
          },
        ],
        internalType: "struct ChapterLog.Chapter[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "chapters",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "remixes",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isRemix",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_content",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    name: "createChapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chapterId",
        type: "uint256",
      },
    ],
    name: "getChapter",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "remixes",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isRemix",
            type: "bool",
          },
        ],
        internalType: "struct ChapterLog.Chapter",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChapterCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chapterId",
        type: "uint256",
      },
    ],
    name: "getChapterTips",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tippingTimes",
            type: "uint256",
          },
        ],
        internalType: "struct ChapterLog.Tipping[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chapterId",
        type: "uint256",
      },
    ],
    name: "getRemixes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chapterId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_content",
        type: "string",
      },
    ],
    name: "remixChapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chapterId",
        type: "uint256",
      },
    ],
    name: "tipAuthor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "tippingLog",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tippingTimes",
            type: "uint256",
          },
        ],
        internalType: "struct ChapterLog.Tipping[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type ChapterLogConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChapterLogConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChapterLog__factory extends ContractFactory {
  constructor(...args: ChapterLogConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _bookShareAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChapterLog> {
    return super.deploy(
      _bookShareAddress,
      overrides || {}
    ) as Promise<ChapterLog>;
  }
  override getDeployTransaction(
    _bookShareAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_bookShareAddress, overrides || {});
  }
  override attach(address: string): ChapterLog {
    return super.attach(address) as ChapterLog;
  }
  override connect(signer: Signer): ChapterLog__factory {
    return super.connect(signer) as ChapterLog__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChapterLogInterface {
    return new utils.Interface(_abi) as ChapterLogInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChapterLog {
    return new Contract(address, _abi, signerOrProvider) as ChapterLog;
  }
}
