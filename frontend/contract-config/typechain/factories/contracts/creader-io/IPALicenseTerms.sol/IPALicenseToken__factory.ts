/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IPALicenseToken,
  IPALicenseTokenInterface,
} from "../../../../contracts/creader-io/IPALicenseTerms.sol/IPALicenseToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAssetRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "licensingModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "pilTemplate",
        type: "address",
      },
      {
        internalType: "address",
        name: "bodhi",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BODHI",
    outputs: [
      {
        internalType: "contract IBodhi",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IP_ASSET_REGISTRY",
    outputs: [
      {
        internalType: "contract IPAssetRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LICENSING_MODULE",
    outputs: [
      {
        internalType: "contract LicensingModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PIL_TEMPLATE",
    outputs: [
      {
        internalType: "contract PILicenseTemplate",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "ipId",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "licenseTermsId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "ltRecipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "remixType",
        type: "uint256",
      },
    ],
    name: "mintLicenseToken",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startLicenseTokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remixTypes",
    outputs: [
      {
        internalType: "enum IPALicenseToken.RemixType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type IPALicenseTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IPALicenseTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IPALicenseToken__factory extends ContractFactory {
  constructor(...args: IPALicenseTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ipAssetRegistry: PromiseOrValue<string>,
    licensingModule: PromiseOrValue<string>,
    pilTemplate: PromiseOrValue<string>,
    bodhi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IPALicenseToken> {
    return super.deploy(
      ipAssetRegistry,
      licensingModule,
      pilTemplate,
      bodhi,
      overrides || {}
    ) as Promise<IPALicenseToken>;
  }
  override getDeployTransaction(
    ipAssetRegistry: PromiseOrValue<string>,
    licensingModule: PromiseOrValue<string>,
    pilTemplate: PromiseOrValue<string>,
    bodhi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ipAssetRegistry,
      licensingModule,
      pilTemplate,
      bodhi,
      overrides || {}
    );
  }
  override attach(address: string): IPALicenseToken {
    return super.attach(address) as IPALicenseToken;
  }
  override connect(signer: Signer): IPALicenseToken__factory {
    return super.connect(signer) as IPALicenseToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IPALicenseTokenInterface {
    return new utils.Interface(_abi) as IPALicenseTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPALicenseToken {
    return new Contract(address, _abi, signerOrProvider) as IPALicenseToken;
  }
}
